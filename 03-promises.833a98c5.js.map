{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,MAGEC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,MAAMC,EAAUF,EAAMG,OAChBC,EAASC,OAAOH,EAAQE,OAAOE,OAC/BC,EAAYF,OAAOH,EAAQM,KAAKF,OAChCG,EAAaJ,OAAOH,EAAQQ,MAAMJ,OACxC,IAAK,IAAIK,EAAI,EAAGA,GAAKP,EAAQO,GAAK,EAAG,CACnC,MAAMC,EAAYH,GAAcE,EAAI,GAAKJ,EACvCM,YAAW,KAYjB,IAAuBC,EAAUJ,GAAVI,EAXDH,EAWWD,EAXRE,EAYhB,IAAIG,SAAQ,CAACC,EAASC,KAC3BJ,YAAW,KACT,MAAMK,EAAgBC,KAAKC,SAAW,GAClCF,EACFF,EAAQ,qBAAqBF,QAAeJ,OAE5CO,EAAO,oBAAoBH,QAAeJ,MAAU,GAErDA,EAAM,KAnBFW,MAAKC,IACJ7B,EAAAF,GAASG,OAAO6B,QAAQD,EAAQ,IAEjCE,OAAMC,IACLhC,EAAAF,GAASG,OAAOgC,QAAQD,EAAI,GAC5B,GACHhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  timeout: 2000,\n});\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const inputEl = event.target;\n  const amount = Number(inputEl.amount.value);\n  const delayStep = Number(inputEl.step.value);\n  const firstDelay = Number(inputEl.delay.value);\n  for (let i = 1; i <= amount; i += 1) {\n    const delayTime = firstDelay + (i - 1) * delayStep;\n      setTimeout(() => {\n        createPromise(i, delayTime)\n          .then(message => {\n            Notiflix.Notify.success(message);\n          })\n          .catch(err => {\n            Notiflix.Notify.failure(err);\n          });\n      }, firstDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","timeout","document","querySelector","addEventListener","event","preventDefault","inputEl","target","amount","Number","value","delayStep","step","firstDelay","delay","i","delayTime","setTimeout","position","Promise","resolve","reject","shouldResolve","Math","random","then","message","success","catch","err","failure"],"version":3,"file":"03-promises.833a98c5.js.map"}